name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run backend tests
      run: |
        cd backend
        mvn clean test
        
    - name: Build backend
      run: |
        cd backend
        mvn clean package -DskipTests
        
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-jar
        path: backend/target/*.jar

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Download backend artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-jar
        path: backend/target/
        
    - name: Download frontend artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/
        
    - name: Start backend server
      run: |
        cd backend
        java -jar target/*.jar &
        sleep 30
        
    - name: Test backend health
      run: |
        curl -f http://localhost:8080/api/health || exit 1
        
    - name: Run integration tests
      run: |
        # Add integration tests here
        echo "Integration tests placeholder"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run dependency check
      run: |
        cd backend
        mvn org.owasp:dependency-check-maven:check
        
    - name: Run npm audit
      run: |
        cd frontend
        npm audit --audit-level moderate

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [backend, frontend, integration]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          backend-jar/*.jar
          frontend-build/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}